{
  "name": "@bartender/service",
  "version": "1.0.0",
  "description": "The serverless service that runs bartender",
  "main": "index.js",
  "author": "Andrew Tomai",
  "license": "MIT",
  "devDependencies": {
    "@babel/core": "^7.12.10",
    "@babel/preset-env": "^7.12.11",
    "@babel/preset-typescript": "^7.12.7",
    "@graphql-codegen/cli": "1.19.4",
    "@graphql-codegen/typescript": "1.19.0",
    "@graphql-codegen/typescript-resolvers": "1.18.0",
    "@types/chai": "^4.2.14",
    "@types/mocha": "^8.2.0",
    "@types/node": "^14.14.16",
    "aws-sdk": "^2.729.0",
    "axios": "^0.19.2",
    "babel-loader": "^8.2.2",
    "cache-loader": "^4.1.0",
    "chai": "^4.2.0",
    "commander": "^6.0.0",
    "fork-ts-checker-webpack-plugin": "^6.0.8",
    "mocha": "^8.2.1",
    "serverless": "^1.78.1",
    "serverless-dynamodb-local": "^0.2.39",
    "serverless-offline": "^6.5.0",
    "serverless-stack-output": "^0.2.3",
    "serverless-webpack": "^5.3.5",
    "snap-shot-it": "^7.9.3",
    "start-server-and-test": "^1.11.6",
    "ts-mocha": "^8.0.0",
    "typescript": "^4.1.3",
    "wait-on": "^5.2.0",
    "webpack": "^5.11.0",
    "webpack-node-externals": "^2.5.2"
  },
  "dependencies": {
    "apollo-server-lambda": "^2.19.0",
    "chalk": "^4.1.0",
    "graphql": "^15.4.0",
    "graphql-type-uuid": "^0.2.0",
    "ramda": "^0.27.1",
    "uuid": "^8.3.0"
  },
  "scripts": {
    "postinstall": "serverless dynamodb install",
    "start": "export LOG_LEVEL=100; serverless offline start --stage local",
    "deploy": "serverless deploy",
    "test": "ts-mocha './test/unit/**/*.ts'",
    "test:watch": "ts-mocha './test/unit/**/*.ts' --watch --watch-files src/**/*,test/**/*",
    "integration": "export TEST_STAGE='local'; ts-mocha './test/integration/**/*.ts'",
    "integration:watch": "export TEST_STAGE='local'; ts-mocha './test/integration/**/*.ts' --watch --watch-files .webpack/**/*,test/**/*",
    "integration:ci": "start-server-and-test 'yarn start' http-get://localhost:4000/local/ping 'yarn integration'",
    "integration:dev": "export TEST_STAGE='dev'; ts-mocha './test/integration/**/*.ts'",
    "integration:prod": "export TEST_STAGE='prod'; ts-mocha './test/integration/**/*.ts'",
    "generate-types": "graphql-codegen --config .graphqlrc.yml"
  }
}
