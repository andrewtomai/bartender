service: bartender
provider:
  name: aws
  region: us-west-2
  runtime: nodejs18.x
  stage: ${opt:stage, 'dev'}
  iam:
    role:
      statements:
        - Effect: "Allow"
          Resource: "arn:aws:dynamodb:${self:provider.region}:*:table/Drinks-${self:provider.stage}"
          Action:
            - "dynamodb:PutItem"
            - "dynamodb:GetItem"
  httpApi:
    cors: true
  environment:
    TABLE_NAME: Drinks-${self:provider.stage}
plugins:
  - serverless-esbuild
  - serverless-dynamodb
  - serverless-offline
  - serverless-stack-output

functions:
  graphql:
    handler: src/index.graphqlHandler
    events:
      - httpApi:
          path: /
          method: POST
      - httpApi:
          path: /
          method: GET

resources:
  Resources:
    Table:
      Type: AWS::DynamoDB::Table
      Properties:
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: primaryId
            AttributeType: S
          - AttributeName: secondaryId
            AttributeType: S
        KeySchema:
          - AttributeName: primaryId
            KeyType: HASH
          - AttributeName: secondaryId
            KeyType: RANGE
        TableName: Drinks-${self:provider.stage}

custom:
  dynamodb:
    start:
      inMemory: true
      migrate: true
    stages:
      - ${self:provider.stage}
  output:
    file: .${self:provider.stage}.stack.json
